diff --git a/include/daw/json/impl/daw_json_to_string.h b/include/daw/json/impl/daw_json_to_string.h
index a848c6f7..9e37e161 100644
--- a/include/daw/json/impl/daw_json_to_string.h
+++ b/include/daw/json/impl/daw_json_to_string.h
@@ -17,14 +17,14 @@
 #include <daw/daw_bounded_vector.h>
 #include <daw/daw_move.h>
 #include <daw/daw_traits.h>
-#include <utf8/unchecked.h>
+#include <daw/utf8/unchecked.h>

 #include <ciso646>
 #include <optional>
 #include <sstream>
 #include <string>
 #ifndef DAW_JSON_CUSTOM_D2S
-#include <third_party/dragonbox/dragonbox.h>
+#include <daw/third_party/dragonbox/dragonbox.h>
 #elif __has_include( "custom_d2s.h" )
 #include "custom_d2s.h"
 #else
@@ -247,7 +247,7 @@ namespace daw::json::utils {
        copy_to_iterator( OutputIterator it, Container const &container ) {
                if constexpr( do_escape ) {
                        using iter = daw::remove_cvref_t<decltype( std::begin( container ) )>;
-                       using it_t = utf8::unchecked::iterator<iter>;
+                       using it_t = daw::utf8::unchecked::iterator<iter>;
                        auto first = it_t( std::begin( container ) );
                        auto const last = it_t( std::end( container ) );
                        while( first != last ) {
@@ -328,7 +328,7 @@ namespace daw::json::utils {
                }
                if constexpr( do_escape ) {

-                       auto chr_it = utf8::unchecked::iterator<char const *>( ptr );
+                       auto chr_it = daw::utf8::unchecked::iterator<char const *>( ptr );
                        while( *chr_it.base( ) != '\0' ) {
                                auto const cp = *chr_it++;
                                switch( cp ) {
