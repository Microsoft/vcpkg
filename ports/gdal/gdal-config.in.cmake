get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_DIR}" DIRECTORY)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" DIRECTORY)

add_library(GDAL::GDAL UNKNOWN IMPORTED)

set(GDAL_INCLUDE_DIRS "${_IMPORT_PREFIX}/include")
set(GDAL_INCLUDE_DIR "${GDAL_INCLUDE_DIRS}" CACHE STRING "")

find_library(GDAL_LIBRARY_RELEASE NAMES gdal_i gdal PATHS "${_IMPORT_PREFIX}/lib" NO_DEFAULT_PATH REQUIRED)
set(GDAL_LIBRARIES optimized "${GDAL_LIBRARY_RELEASE}")
set_property(TARGET GDAL::GDAL APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(
    GDAL::GDAL PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${GDAL_INCLUDE_DIRS}"
    IMPORTED_LOCATION_RELEASE "${GDAL_LIBRARY_RELEASE}"
)

find_library(GDAL_LIBRARY_DEBUG NAMES gdal_i_d gdal_d gdal_i gdal PATHS "${_IMPORT_PREFIX}/debug/lib" NO_DEFAULT_PATH)
if(GDAL_LIBRARY_DEBUG)
    set_property(TARGET GDAL::GDAL APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
    set_target_properties(
        GDAL::GDAL PROPERTIES
        IMPORTED_LOCATION_DEBUG "${GDAL_LIBRARY_DEBUG}"
    )
    list(APPEND GDAL_LIBRARIES debug "${GDAL_LIBRARY_DEBUG}")
endif()

include(CMakeFindDependencyMacro)

find_dependency(geos CONFIG)
set_property(TARGET GDAL::GDAL APPEND PROPERTY INTERFACE_LINK_LIBRARIES GEOS::geos_c GEOS::geos)

find_dependency(OpenJPEG CONFIG)
set_property(TARGET GDAL::GDAL APPEND PROPERTY INTERFACE_LINK_LIBRARIES openjp2)

if(@DEPENDENCY_TIFF@)
    find_dependency(TIFF)
    set_property(TARGET GDAL::GDAL APPEND PROPERTY INTERFACE_LINK_LIBRARIES TIFF::TIFF)
endif()

find_dependency(geotiff CONFIG)
set_property(TARGET GDAL::GDAL APPEND PROPERTY INTERFACE_LINK_LIBRARIES geotiff_library)

find_dependency(LibXml2)
set_property(TARGET GDAL::GDAL APPEND PROPERTY INTERFACE_LINK_LIBRARIES LibXml2::LibXml2)
